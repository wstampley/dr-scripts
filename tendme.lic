=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#tendme
=end

custom_require.call(%w[common common-healing events])

class TendMe

  def initialize
    arg_definitions = [
      [
        { name: 'train', regex: /train/i, optional: true, description: 'unwrap and rebind wounds for optimum learning' },
        { name: 'monitor', regex: /monitor/i, optional: true, description: 'run in background to keep bleeders tended' }
      ]
    ]
    args = parse_args(arg_definitions)
    waitrt? while bind_open_wounds?
    monitor_health(args.train) if args.monitor
  end

  def bind_open_wounds?
    tended_wounds = false
    health_data = DRCH.check_health
    (
      health_data['lodged'].values.flatten +
      health_data['parasites'].values.flatten +
      health_data['bleeders'].values.flatten
    )
    .reject { |wound| wound.internal? || wound.bleeding_rate =~ /tended|clotted/ } # untendable
    .select do |wound|      
      skilled_to_tend = DRCH.skilled_to_tend_wound?(wound.bleeding_rate)
      unless wound.bleeding? && skilled_to_tend
        DRC.message("You are not skilled enough to tend a #{wound.bleeding_rate.upcase} bleeder on a #{wound.body_part.upcase}, skipping")
      end
      # if not bleeding then it's a parasite or lodged item
      !wound.bleeding? || skilled_to_tend
    end
    .sort_by { |wound| wound.severity * -1 } # sort descending
    .each { |wound| tended_wounds = DRCH.bind_wound(wound.body_part) || tended_wounds }
    return tended_wounds
  end

  # Monitor for wounds to begin bleeding again then tend them.
  def monitor_health(train)
    Flags.add('tendme-bind-lodged', /You feel a slight pain from the (?<item>.*) lodged in your (?<body_part>.*)\./)
    Flags.add('tendme-bind-wound', /The bandages binding your (?<body_part>.*) (become|come|soak)/)
    Flags.add('tendme-rewrap-wound', /You feel like now might be a good time to change the bandages on your (?<body_part>.*)\./)

    loop do
      pause 0.5
      tend_wounds = false
      # If training, you can rewrap wound for more experience.
      if Flags['tendme-rewrap-wound']
        if train && DRSkill.getxp('First Aid') < 30
          tend_wounds = true
          body_part = Flags['tendme-rewrap-wound'][:body_part]
          Flags.reset('tendme-rewrap-wound')
          DRCH.unwrap_wound(body_part)
        end
      end
      # One or more active bleeders, tend them.
      if Flags['tendme-bind-wound']
        tend_wounds = true
        Flags.reset('tendme-bind-wound')
      end
      # Detected lodged ammo or parasites, tend them out.
      if Flags['tendme-bind-lodged']
        tend_wounds = true
        Flags.reset('tendme-bind-lodged')
      end
      if tend_wounds
        tend_wounds = false
        bind_open_wounds?
      end
    end
  end

end

before_dying do
  Flags.delete('tendme-bind-wound')
  Flags.delete('tendme-rewrap-wound')
  Flags.delete('tendme-bind-lodged')
end

TendMe.new
