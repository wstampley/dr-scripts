=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#smelt
=end

custom_require.call(%w[common common-crafting equipmanager])

class Smelt
  include DRC
  include DRCC

  def initialize
    arg_definitions = [
      [
        { name: 'refine', regex: /refine/i, optional: true }
      ]
    ]

    args = parse_args(arg_definitions)

    @equipment_manager = EquipmentManager.new
    rod_info = @equipment_manager.get_tool_info('forging', 'rod')
    bellows_info = @equipment_manager.get_tool_info('forging', 'bellows')
    shovel_info = @equipment_manager.get_tool_info('forging', 'shovel')

    if rod_info.nil? || bellows_info.nil? || shovel_info.nil?
      DRC.message('Configuration is missing one or more required tools [craft: forging, tool_type: rod, bellows, shovel]')
      exit
    end

    @rod = "#{rod_info.adjective} #{rod_info.name}"
    @bellows = "#{bellows_info.adjective} #{bellows_info.name}"
    @shovel = "#{shovel_info.adjective} #{shovel_info.name}"

    if !DRCI.exists?(@rod) || !DRCI.exists?(@bellows) || !DRCI.exists?(@shovel)
      DRC.message('A TOOL WAS MISSING. FIND IT AND RESTART')
      exit
    end

    settings = get_settings
    @bag = settings.crafting_container
    @bag_items = settings.crafting_items_in_container
    @belt = settings.forging_belt

    @equipment_manager.empty_hands

    @equipment_manager.get_tool?('forging', 'rod')
    if args.refine
      refine
    else
      stir
    end
    @equipment_manager.return_tool?('forging', 'rod')
  end

  def refine
    DRC.bput('get flux', 'you get')
    case DRC.bput('pour flux in crucible', 'clumps of molten metal', 'flickers and is unable to consume', 'down and needs more fuel', 'roundtime')
    when /roundtime/i
      waitrt?
      fput('stow flux')
      return stir
    when 'clumps of molten metal'
      waitrt?
      fput('stow flux')
      return turn
    when 'flickers and is unable to consume'
      waitrt?
      fput('stow flux')
      return bellows
    when 'down and needs more fuel'
      waitrt?
      fput('stow flux')
      return fuel
    end
  end

  def stir
    pause 1
    waitrt?
    case bput("stir crucible with my #{@rod}", 'You can only mix a crucible', 'clumps of molten metal', 'flickers and is unable to consume', 'down and needs more fuel', 'roundtime')
    when /roundtime/i
      return stir
    when 'You can only mix a crucible'
      return
    when 'clumps of molten metal'
      return turn
    when 'flickers and is unable to consume'
      return bellows
    when 'down and needs more fuel'
      return fuel
    end
  end

  def turn
    pause 1
    waitrt?
    DRC.bput('turn crucible', 'roundtime')
    stir
  end

  def bellows
    pause 1
    waitrt?
    @equipment_manager.get_tool?('forging', 'bellows')
    DRC.bput("push my #{@bellows}", 'Roundtime')
    waitrt?
    @equipment_manager.return_tool?('forging', 'bellows')
    stir
  end

  def fuel
    pause 1
    waitrt?
    @equipment_manager.get_tool?('forging', 'shovel')
    DRC.bput("push fuel with my #{@shovel}", 'Roundtime')
    waitrt?
    @equipment_manager.return_tool?('forging', 'shovel')
    stir
  end
end

Smelt.new
